#include <Wire.h>

#include "VL53L5cx.h"
#include "Debugger.h"

// Set to 0 for polling
static const uint8_t INT_PIN = 0;

static const uint8_t LPN_PIN =  1;

// Set to 0 for continuous mode
static const uint8_t INTEGRAL_TIME_MS = 10;

static VL53L5cx _sensor(LPN_PIN, &Wire, INTEGRAL_TIME_MS, VL53L5cx::RES_8X8_HZ_15);

static volatile bool _gotInterrupt;

static void interruptHandler() 
{
    _gotInterrupt = true;
}

void setup(void)
{
    Serial.begin(115200);
    delay(4000);
    Debugger::printf("Serial started on 115200\n");

    pinMode(INT_PIN, INPUT);     

    Wire.begin();                
    Wire.setClock(400000);      
    delay(1000);

    Debugger::printf("Starting Sensor...\n\n");

    delay(1000);

    if (INT_PIN > 0) {
        attachInterrupt(INT_PIN, interruptHandler, FALLING);
    }

    _sensor.begin();
}

void loop(void)
{
    if (INT_PIN == 0 || _gotInterrupt) {

      _gotInterrupt = false;
      while (!_sensor.dataIsReady()) {
        delay(10);
        printf("Sensor Data Not ready");
      }
      _sensor.readData();

        for (auto i=0; i<_sensor.getPixelCount(); i++) {

          if(i != 0 && i%8 == 0) {
              Debugger::printf("\n%4d  ", _sensor.getDistanceMm(i));              
          } else {
              Debugger::printf("%4d  ", _sensor.getDistanceMm(i));
          }
        }
        Debugger::printf("\n\n");
    } 
}
